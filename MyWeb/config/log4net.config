<?xml version="1.0" encoding="utf-8"?>
<!--
  log4net配置文件
  -->

<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <log4net>
    <root>
      <!--
            OFF > FATAL > ERROR > WARN > INFO > DEBUG  > ALL 
            日志调用的方法的等级必须大于logger的日志等级，日志才能正常输出，比如logger的日志等级是INFO，代码中log.DEBUG()将不会正常输出日志
       -->
      <level value="DEBUG" />
      <!--在root和logger中只要写了appender-ref，文件都会生成-->
      <appender-ref ref="LogFileAppender" />
      <appender-ref ref="AdoNetAppender" />
    </root>

    <!--所有的logger都会继承root,配置了 additivity="false"的logger不继承root-->
    <!--additivity="true"，同一个appender-ref只需在root或者logger中配置一个即可，否则会重复输出-->
    <logger name="LogFile" additivity="false">
      <level value="DEBUG"/>
    </logger>

    <appender name="LogFileAppender" type="log4net.Appender.FileAppender" >
      <param name="File" value="../log/FileAppender/log.txt" />
      <param name="AppendToFile" value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <!--每条日志头部的文字说明-->
        <!--<param name="Header" value="[Header]"/>-->
        <!--每条日志末尾的文字说明-->
        <!--<param name="Footer" value=[Footer]"/>-->
        <!--输出格式-->
        <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
        <param name="ConversionPattern" value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level loggerName：%logger property:[%property{NDC}] - 错误描述：%message%newline" />
        <!--<param name="ConversionPattern"  value="%d [%t] %-5p %c [%x] - %m%n" />-->
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG" />
        <param name="LevelMax" value="WARN" />
      </filter>
    </appender>

    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender" >
      <!--输出到文件的文件路径-->
      <param name="File" value="../log/" />
      <!--<param name="File" value="Log\Mobile\"/>-->
      <param name="DatePattern" value="yyyy/yyyy-MM-dd-&quot;log.txt&quot;"/>
      <!--使用Unicode编码-->
      <!--<Encoding value="UTF-8" />-->
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true" />
      <!--是否只写到一个文件中-->
      <param name="StaticLogFileName" value="false" />
      <!--每个文件最大的存储量-->
      <param name="maximumFileSize" value="10MB" />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <param name="MaxSizeRollBackups" value="3" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Composite" />
      <!--输出内容的格式-->
      <layout type="log4net.Layout.PatternLayout">
        <!--输出格式-->
        <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
        <param name="ConversionPattern" value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 出错类：%logger property:[%property{NDC}] - 错误描述：%message%newline" />
        <!--<param name="ConversionPattern"  value="%d [%t] %-5p %c [%x] - %m%n" />-->
      </layout>
    </appender>

    <!--将消息记录到sqlserver数据库-->
    <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <!--bufferSize意思是缓存条数达到这个值才往数据库里写数据-->
      <bufferSize value="10" />
      <connectionType value="System.Data1qlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="data source=.;initial catalog=TestDB;integrated security=false;persist security info=True;User ID=sa;Password=xiaofeng" />
      <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
    </appender>
    
  </log4net>
</configuration>